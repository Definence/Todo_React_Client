{"src/index.js":{"hash":"5c30e45897627acffa554eae35b7b1a9","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/index.js":{"hash":"240190dfa2b41b74e7232f04610e48e4","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_index.js":{"hash":"4a187752191b61b4b8e1b4fd126e5ed1","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_edition.js":{"hash":"b3a56cd8607ea0529f4bc6488756080d","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_edition.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/task_profile.js":{"hash":"34d125547d7031fcf304e2ffb1a04fc2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/task_profile.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_out.js":{"hash":"d227c4ee82c226dd5e71ca393790e2d2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_out.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_up.js":{"hash":"317fc87d05ad7ee2c6563ee1ec64154b","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_up.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/log_in.js":{"hash":"cddf5d7e255ab83d3ea6bb6a7c602528","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/log_in.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/tasks.js":{"hash":"9695ba117856f52c345f37ce515807b4","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/tasks.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/menu.js":{"hash":"9520b211796e8e197238ec4d6efed8ae","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/menu.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_list.js":{"hash":"57a9cfeeda343f95f96a2037e7cdb8e8","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_list.js","messages":[{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":154,"column":39,"nodeType":"ArrowFunctionExpression","source":"        {this.props.tasks.map( (task) => {"},{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":189,"column":39,"nodeType":"ArrowFunctionExpression","source":"        {this.props.tasks.map( (task) => {"}],"errorCount":0,"warningCount":2,"source":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\n\n// import { sortTasks } from '../middlewares/sorted_tasks';\nimport {\n  getTasks,\n  deleteTask,\n  completeTask,\n  destroyCheckedTasks\n} from '../../actions/tasks';\n\n\nclass TasksList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      checked: []\n    }\n  }\n\n  //перевіряє чи зі стор  прийшли в пропси\n  static contextTypes = {\n    store: React.PropTypes.object\n  };\n\n  componentDidMount () {\n    this.context.store.dispatch(getTasks());\n  }\n\n  // //замінили на componentDidMount(аналогія в tasks_edition)\n  componentWillReceiveProps(nextProps) {\n    this.setState({ tasks: nextProps.tasks });\n  }\n\n  handleComplete (id, active) {\n    this.props.onCompleteTask(id, active);\n  }\n\n  handleDestroy (id) {\n    this.props.onDestroyTask(id);\n  }\n\n  sortTasks (type) {\n    if (type === 'title') {\n      let sortedTasks = this.props.tasks.sort(function (a, b) {\n        if (a.title > b.title) {\n          return 1;\n        }\n        if (a.title < b.title) {\n          return -1;\n        }\n        // a должно быть равным b\n        return 0;\n      });\n      this.setState({ tasks: sortedTasks });\n      // this.props.onSortTasks(tasks);\n\n    } else {\n      let sortedTasks = this.props.tasks.sort(function (a, b) {\n        if (a.priority > b.priority) {\n          return 1;\n        }\n        if (a.priority < b.priority) {\n          return -1;\n        }\n        // a должно быть равным b\n        return 0;\n      });\n      this.setState({ tasks: sortedTasks });\n      // this.props.onSortTasks(tasks);\n    }\n  }\n\n  handleCheck (id) {\n    let searchResult = this.state.checked.indexOf(id);\n    if (searchResult !== -1) {\n      //удалить ід з масива чекд (починаючи з індекс, к-сть ел)\n      this.state.checked.splice(searchResult, 1);\n    } else {\n      this.state.checked.push(id);\n    }\n\n    this.setState({ checked: this.state.checked });\n  }\n\n  handleDeleteChecked () {\n    if (this.state.checked.length > 0) {\n      this.props.onDestroyCheckedTasks(this.state.checked);\n    }\n  }\n\n  handleCheckAll () {\n    if (this.props.tasks.length === this.state.checked.length) {\n      this.setState({ checked: [] });\n    } else {\n      let fakeState = [];\n      for (var i = 0; i < this.props.tasks.length; i++) {\n        fakeState.push(this.props.tasks[i].id)\n      }\n      this.setState({ checked: fakeState });\n    }\n  }\n\n  checkboxRendering (id) {\n    let searchResult = this.state.checked.indexOf(id);\n    if (searchResult === -1) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  checkboxIcon () {\n    if (this.props.tasks.length === this.state.checked.length) {\n      return (\n        'glyphicon-unchecked'\n      );\n    } else {\n      return (\n        'glyphicon-check'\n      );\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        <div className='container-fluid'>\n          <div className={`glyphicon btn-group btn ${this.checkboxIcon()}`} onClick={this.handleCheckAll.bind(this)} />\n\n          <div className='btn-group btn pull-right'>\n            <div className=\"btn btn-group btn-info\" onClick={this.sortTasks.bind(this, 'priority')}>\n              Sort by priority\n            </div>\n          </div>\n\n          <div className='btn-group btn pull-right'>\n            <div className=\"btn btn-group btn-info\" onClick={this.sortTasks.bind(this, 'title')}>\n              Sort by asc\n            </div>\n          </div>\n\n          <div className='btn-group btn pull-right'>\n            <div className=\"btn btn-group btn-danger\"onClick={ this.handleDeleteChecked.bind(this) } >\n              Delete checked\n            </div>\n          </div>\n        </div>\n\n        <h3> Current tasks: </h3>\n\n        {this.props.tasks.map( (task) => {\n          if (!task.active) {\n\n            return (\n              <div key={task.id} className='container-fluid'>\n\n                <div className='col-xs-1'>\n                  <input type='checkbox' onChange={this.handleCheck.bind(this, task.id)} checked={this.checkboxRendering(task.id)} />\n                </div>\n                <div className=\"li_height hover1 for_icons\">\n\n                  <Link to={`/tasks/${task.id}/profile`} className='task_list' >\n                    <div className=\"col-xs-7\">{ task.title }</div>\n                  </Link>\n\n                  <div className=\"col-xs-1 priority\">{ task.priority }</div>\n                  <div className=\"col-xs-3 hover2 icons-block\" >\n\n                    <Link to={`/tasks/${task.id}/edit`} >\n                      <span className=\"glyphicon glyphicon-pencil\" title=\"Edit task\"></span>\n                    </Link>\n\n                    <span onClick={this.handleDestroy.bind(this, task.id)} className=\"glyphicon glyphicon-trash\" title=\"Delete task\"></span>\n\n                    <span onClick={this.handleComplete.bind(this, task.id, task.active)} className=\"glyphicon glyphicon-ok\" title=\"Mark as completed\"></span>\n\n                  </div>\n                </div>\n              </div>\n            );\n\n          }\n        })}\n\n        <h3> Completed tasks: </h3>\n        {this.props.tasks.map( (task) => {\n          if (task.active) {\n\n            return (\n              <div key={task.id} className='container-fluid'>\n\n                <div className='col-xs-1'>\n                  <input type='checkbox' onChange={this.handleCheck.bind(this, task.id)} checked={this.checkboxRendering(task.id)} />\n                </div>\n\n                <div className=\"li_height hover1 for_icons\">\n\n                  <Link to={`/tasks/${task.id}/profile`} className='task_list' >\n                    <div className=\"col-xs-7\">{ task.title }</div>\n                  </Link>\n\n                  <div className=\"col-xs-1 priority\">{ task.priority }</div>\n                  <div className=\"col-xs-3 hover2 icons-block\">\n\n                    <Link to={`/tasks/${task.id}/edit`} >\n                      <span className=\"glyphicon glyphicon-pencil\" title=\"Edit task\"></span>\n                    </Link>\n\n                    <span onClick={this.handleDestroy.bind(this, task.id)} className=\"glyphicon glyphicon-trash\" title=\"Delete task\"></span>\n\n                    <span onClick={this.handleComplete.bind(this, task.id, task.active)} className=\"glyphicon glyphicon-remove\" title=\"Mark as uncompleted\"></span>\n\n                  </div>\n                </div>\n              </div>\n            );\n\n          }\n        })}\n\n      </div>\n    );\n  }\n\n}\n\n\nexport default connect(\n  state => ({\n    tasks: state.tasks.items\n  }),\n  dispatch => ({\n\n    onDestroyTask: (id) => {\n      dispatch(deleteTask(id));\n    },\n\n    onCompleteTask: (id, active) => {\n      dispatch(completeTask(id, active));\n    },\n\n    // onSortTasks: (tasks) => {\n    //   dispatch(sortTasks(tasks));\n    // },\n\n    onDestroyCheckedTasks: (ids) => {\n      dispatch(destroyCheckedTasks(ids));\n    }\n  })\n)(TasksList);"}],"errorCount":0,"warningCount":2}},"src/components/tasks/task_form.js":{"hash":"2445d7b491b09bceec903695027f3eae","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/task_form.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/tasks.js":{"hash":"a9dfb4c4383a57ea63d6dbbfae2d3cb1","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/tasks.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/users.js":{"hash":"05aaff0c59260ea7ef4283258b2e2a0c","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/users.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_in.js":{"hash":"31d0cd06b806dc57e762df555db22235","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_in.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/constants/action_types.js":{"hash":"50b5c5047f0d65715962b91ce6cfa6cb","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/constants/action_types.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/middlewares/redirections.js":{"hash":"d41d8cd98f00b204e9800998ecf8427e","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/middlewares/redirections.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/constants/action_config.js":{"hash":"0bc8107adc733e084c568f1351fa4ba4","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/constants/action_config.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/constants/api_config.js":{"hash":"f318550dfcede5a2728703cb03a783b2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/constants/api_config.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/not_exists.js":{"hash":"f35b13e2e4cd19aeb16c48f3959e9c5f","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/not_exists.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/navbar.js":{"hash":"7a19afeb7e4763c50c7da6989b65f583","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/navbar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/email_confirmation.js":{"hash":"e86a5738f28503a3259cebfa641a51e8","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/email_confirmation.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/alert.js":{"hash":"2742c136d7a1260a663ffacf7f6c6701","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/alert.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/alerts.js":{"hash":"abf277921b737f563276803953271ac5","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/alerts.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/notification.js":{"hash":"c0dfcf6e0615a06d875c0777b0157334","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/notification.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/notifications.js":{"hash":"5540e8759e2836aaeff8d81926dfb3f0","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/notifications.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/notifications.js":{"hash":"55c5ba6e28197b4319b127dda46ef00f","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/notifications.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/middlewares/notifications.js":{"hash":"dfb5e907b125f940eec5a79e28c59604","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/middlewares/notifications.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/middlewares/tasks.js":{"hash":"039485f195eda48e96b54d0af2030515","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/middlewares/tasks.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'SORT_TASKS' is defined but never used.","line":1,"column":10,"nodeType":"Identifier","source":"import { SORT_TASKS } from '../constants/action_types';"}],"errorCount":0,"warningCount":1,"source":"import { SORT_TASKS } from '../constants/action_types';\n\n\nexport function sortTasks () {\n  return function(dispatch) {\n    // dispatch({ type: SORT_TASKS, body: 'bfgfd' })\n    console.log('11111111');\n  }\n}"}],"errorCount":0,"warningCount":1}},"src/components/middlewares/sorted_tasks.js":{"hash":"21976873ac2fa9388d69f0c567f22f4d","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/middlewares/sorted_tasks.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/sessions.js":{"hash":"85faf0722595345f3c3b83e986caef3c","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/sessions.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'browserHistory' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","source":"import { browserHistory } from 'react-router';"},{"ruleId":"no-unused-vars","severity":1,"message":"'push' is defined but never used.","line":3,"column":10,"nodeType":"Identifier","source":"import { push } from 'react-router-redux'"}],"errorCount":0,"warningCount":2,"source":"import axios from 'axios';\nimport { browserHistory } from 'react-router';\nimport { push } from 'react-router-redux'\n\nimport { SESSION_URL, HEADERS } from '../components/constants/api_config';\nimport { notificationsAsync } from '../components/middlewares/notifications';\nimport { locations } from '../components/middlewares/locations';\n\n\nexport function signIn(session){\n  return function(dispatch, getState) {\n    let body = { session: session }\n    // let body = JSON.stringify({ session: session });\n    axios.post(`${SESSION_URL}`, body, { headers: HEADERS })\n\n      .then(res => {\n        if (res.status === 207) {\n          notificationsAsync({\n            message: 'Your account is not activated. Please confirm your email!'\n          })(dispatch);\n        } else if (res.status === 200) {\n          // зберігає дані з бекенду в локалстор\n          localStorage.setItem('token', res.data.token);\n          localStorage.setItem('username', res.data.username);\n\n          locations({\n            url: '/'\n          })(dispatch);\n\n          // browserHistory.push('/');\n          // location.reload();\n\n        } else if (res.status === 204) {\n          notificationsAsync({\n            message: 'User does not exists!'\n          })(dispatch);\n        }\n      })\n\n      .catch(e => {\n        console.error(\"error: \", e);\n      })\n\n  }\n}"}],"errorCount":0,"warningCount":2}},"src/components/middlewares/locations.js":{"hash":"cf7247dd118fd467d9bd600755d74e8c","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/middlewares/locations.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/locations.js":{"hash":"dd69578d42922f646d9dd05b5194630b","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/locations.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}}}