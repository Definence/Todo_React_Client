{"src/index.js":{"hash":"37f780926d8e80edfdc7a73e4587043c","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/index.js":{"hash":"470f56409b56eddc8bd375bf458335c2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_index.js":{"hash":"4b943a1671ea065cf825e7b6f9c18859","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_index.js","messages":[{"ruleId":"react/jsx-pascal-case","severity":1,"message":"Imported JSX component Task_Form must be in PascalCase","line":25,"column":13,"nodeType":"JSXOpeningElement","source":"            <Task_Form />"}],"errorCount":0,"warningCount":1,"source":"import React from 'react';\n// import { connect } from 'react-redux';\n// import { Link } from 'react-router';\n\n// import { getTasks } from '../../actions/tasks';\nimport Menu from '../layouts/menu';\nimport TasksList from './tasks_list';\nimport Task_Form from './task_form';\n\n\nconst Tasks_Index = () => {\n  return (\n    <div>\n\n      <Menu/>\n\n      <div className=\"container\">\n        <div className=\"row\">\n\n          <div className=\"col-sm-8\">\n            <TasksList />\n          </div>\n\n          <div className=\"col-sm-4\">\n            <Task_Form />\n          </div>\n\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Tasks_Index;\n"}],"errorCount":0,"warningCount":1}},"src/components/tasks/tasks_edition.js":{"hash":"e1051f4ed73d2b8cc770589fcb1db129","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_edition.js","messages":[{"ruleId":"react/no-direct-mutation-state","severity":1,"message":"Do not mutate state directly. Use setState().","line":34,"column":5,"nodeType":"MemberExpression","source":"    this.state.task[field] = element.target.value;"}],"errorCount":0,"warningCount":1,"source":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//import { browserHistory } from 'react-router'\n\nimport Menu from '../layouts/menu';\nimport { getTask, editTask } from '../../actions/tasks';\n\n\nclass Tasks_Edition extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      task: {\n        title: '',\n        description: '',\n        priority: '',\n        due_date: new Date(),\n      }\n    };\n  }\n\n  //витягує з бекенду пропси таска\n  componentDidMount () {\n    let id = this.props.params.id;\n    this.props.onGetTask(id);\n  };\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({task: nextProps.tasks_edition});\n  }\n\n  handleChange(field, element) {\n    this.state.task[field] = element.target.value;\n    this.setState({ task: this.state.task });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onEditTask(this.state.task);\n              //redirect\n    // const { router } = this.props,\n    //   path=`/`;\n    // router.push(path);\n\n    //browserHistory.push('#/users/log_in');\n  }\n\n  render() {\n    const {task} = this.state;\n    // console.log(this.props.params);\n    return (\n      <div>\n        <Menu/>\n\n        <div className='container'>\n          <div className='col-sm-3' />\n\n          <div className='col-sm-6'>\n            <h2 className='text-center'>Task update</h2>\n\n              <form className='form-group' onSubmit={ this.handleSubmit.bind(this) } >\n                <label>Title:</label>\n                <input className='form-control' type=\"text\" value={task.title} name='title' onChange={this.handleChange.bind(this, 'title')} required minLength=\"5\" maxLength=\"30\" />\n\n                <label>Description:</label>\n                <input className='form-control' type=\"text\" value={task.description} name='description' onChange={this.handleChange.bind(this, 'description')} required />\n\n                <label>Priority:</label>\n                <input className='form-control' type=\"number\" value={task.priority} name='priority' onChange={this.handleChange.bind(this, 'priority')} required min=\"-9999\" max=\"9999\" />\n\n                <label>Date:</label>\n                <input className='form-control' type=\"date\" value={task.due_date} name='due_date' onChange={this.handleChange.bind(this, 'due_date')} required />\n\n                <br/>\n\n                <button type=\"submit\" className=\"btn btn-primary form-group\">Save</button>\n              </form>\n\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    tasks_edition: state.tasks.item\n  }),\n\n  dispatch => ({\n    onGetTask: (id) => {\n      dispatch(getTask(id));\n    },\n\n    onEditTask: (task) => {\n      //console.log('Connecting onEditTask: success');\n      dispatch(editTask(task));\n    }\n  })\n\n)(Tasks_Edition);"}],"errorCount":0,"warningCount":1}},"src/components/tasks/task_profile.js":{"hash":"7faa566578249b0c04ae2eae664d30d2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/task_profile.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_out.js":{"hash":"062854a45a39d0ed1685de299a0a451a","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_out.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_up.js":{"hash":"92036240e004b47ca34c330e5007a8f8","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_up.js","messages":[{"ruleId":"react/no-direct-mutation-state","severity":1,"message":"Do not mutate state directly. Use setState().","line":25,"column":5,"nodeType":"MemberExpression","source":"    this.state.user[field] = element.target.value"}],"errorCount":0,"warningCount":1,"source":"import React from 'react';\n// import { connect } from 'react-redux';\nimport { connect } from 'react-redux';\n\nimport Menu from '../layouts/menu';\nimport { addUser  } from '../../actions/users';\n\n\nclass Sign_up extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {\n        email: '',\n        username: '',\n        firstname: '',\n        lastname: '',\n        password: '',\n        password_confirmation: ''\n      }\n    };\n  }\n\n  handleChange(field, element) {\n    this.state.user[field] = element.target.value\n    //console.log(element.target.value)\n  }\n\n  handleSubmit(element) {\n    element.preventDefault();\n    this.props.onAddUser(this.state.user)\n    //console.log(this.state.user)\n  }\n\n  render() {\n    return (\n      <div>\n\n        <Menu />\n\n        <div className='col-sm-3 col-md-4' />\n\n        <div className='col-sm-6 col-md-4' >\n\n          <h2 className='text-center'>Sign up</h2>\n\n          <form className='form-horizontal' onSubmit={this.handleSubmit.bind(this)} >\n\n            <div>\n              <label>Email:</label>\n              <input className='form-control' placeholder=\"Enter your email\" type=\"email\" onChange={this.handleChange.bind(this, 'email')} />\n            </div>\n\n            <div>\n              <label>Username:</label>\n              <input className='form-control' placeholder=\"Enter a username\" type=\"text\" onChange={this.handleChange.bind(this, 'username')} />\n            </div>\n\n            <div>\n              <label>Firstname:</label>\n              <input className='form-control' placeholder=\"Enter your firstname\" type=\"text\" onChange={this.handleChange.bind(this, 'firstname')} />\n            </div>\n\n            <div>\n              <label>Lastname:</label>\n              <input className='form-control' placeholder=\"Enter your lastname\" type=\"text\" onChange={this.handleChange.bind(this, 'lastname')} />\n            </div>\n\n            <div>\n              <label>Password:</label>\n              <input className='form-control' placeholder=\"Enter a password\" type=\"password\" onChange={this.handleChange.bind(this, 'password')} />\n            </div>\n\n            <div>\n              <label>Password confirmation:</label>\n              <input className='form-control' placeholder=\"Enter a password\" type=\"password\" onChange={this.handleChange.bind(this, 'password_confirmation')} />\n            </div>\n\n            <br />\n\n            <button type=\"submit\" className=\"btn btn-primary center-block\">Sign up</button>\n\n          </form>\n        </div>\n\n      </div>\n    );\n\n    }\n  }\n\nexport default connect(\n  state => ({}),\n  dispatch => ({\n    onAddUser: (user) => {\n      dispatch(addUser(user));\n    }\n  })\n)(Sign_up);"}],"errorCount":0,"warningCount":1}},"src/components/users/log_in.js":{"hash":"1e76af7d7ee8d16dd01a24caa13ffac6","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/log_in.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/tasks.js":{"hash":"9ae629beefd2280d8044140e0c648e60","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/tasks.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/menu.js":{"hash":"8a044e7edcfa1a7c9ec05257a74f1024","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/menu.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_list.js":{"hash":"2df26c896e2071236d462fec3a147b72","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_list.js","messages":[{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":33,"column":39,"nodeType":"ArrowFunctionExpression","source":"        {this.props.tasks.map( (task) => {"},{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":65,"column":39,"nodeType":"ArrowFunctionExpression","source":"        {this.props.tasks.map( (task) => {"}],"errorCount":0,"warningCount":2,"source":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport { getTasks, deleteTask, completeTask } from '../../actions/tasks';\n//import axios from 'axios';\n\n// const API_URL = `http://localhost:3000/tasks`;\n// const headers = { 'Content-Type': 'application/json', }\n\nclass TasksList extends Component {\n\n  static contextTypes = {\n    store: React.PropTypes.object\n  };\n\n  componentDidMount () {\n    return this.context.store.dispatch(getTasks());\n  };\n\n  handleComplete (id, active) {\n    this.props.onCompleteTask(id, active);\n  }\n\n  handleDestroy (id) {\n    this.props.onDestroyTask(id);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <h3> Current tasks: </h3>\n        {this.props.tasks.map( (task) => {\n          if (!task.active) {\n\n            return (\n              <div key={task.id}>\n              <br />\n                <li className=\"li_height hover1 for_icons\">\n\n                  <Link to={`/tasks/${task.id}/profile`} className='task_list' >\n                    <div className=\"col-xs-8\" style={{backgroundColor: ''}} >{ task.title }</div>\n                  </Link>\n\n                  <div className=\"col-xs-1\" style={{backgroundColor: ''}} >{ task.priority }</div>\n                  <div className=\"col-xs-3 hover2\" >\n\n                    <Link to={`/tasks/${task.id}/edit`} >\n                      <span className=\"glyphicon glyphicon-pencil\" title=\"Edit task\"></span>\n                    </Link>\n\n                    <span onClick={this.handleDestroy.bind(this, task.id)} className=\"glyphicon glyphicon-trash\" title=\"Delete task\"></span>\n\n                    <span onClick={this.handleComplete.bind(this, task.id, task.active)} className=\"glyphicon glyphicon-ok\" title=\"Mark as completed\"></span>\n\n                  </div>\n                </li>\n              </div>\n            );\n\n          }\n        })}\n\n        <h3> Completed tasks: </h3>\n        {this.props.tasks.map( (task) => {\n          if (task.active) {\n\n            return (\n              <div key={task.id}>\n              <br />\n                <li className=\"li_height hover1 for_icons\">\n\n                  <Link to={`/tasks/${task.id}/profile`} className='task_list' >\n                    <div className=\"col-xs-8\" style={{backgroundColor: ''}} >{ task.title }</div>\n                  </Link>\n\n                  <div className=\"col-xs-1\" style={{backgroundColor: ''}} >{ task.priority }</div>\n                  <div className=\"col-xs-3 hover2\" >\n\n                    <Link to={`/tasks/${task.id}/edit`} >\n                      <span className=\"glyphicon glyphicon-pencil\" title=\"Edit task\"></span>\n                    </Link>\n\n                    <span onClick={this.handleDestroy.bind(this, task.id)} className=\"glyphicon glyphicon-trash\" title=\"Delete task\"></span>\n\n                    <span onClick={this.handleComplete.bind(this, task.id, task.active)} className=\"glyphicon glyphicon-remove\" title=\"Mark as uncompleted\"></span>\n\n                  </div>\n                </li>\n              </div>\n            );\n\n          }\n        })}\n\n      </div>\n    );\n  }\n\n}\n\n\nexport default connect(\n  state => ({\n    tasks: state.tasks.items\n  }),\n  dispatch => ({\n    onDestroyTask: (id) => {\n      dispatch(deleteTask(id));\n    },\n    onCompleteTask: (id, active) => {\n      dispatch(completeTask(id, active));\n    },\n  })\n)(TasksList);"}],"errorCount":0,"warningCount":2}},"src/components/tasks/task_form.js":{"hash":"072f4a7d3f990fbcca2665f78c3a7bdb","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/task_form.js","messages":[{"ruleId":"react/no-direct-mutation-state","severity":1,"message":"Do not mutate state directly. Use setState().","line":28,"column":7,"nodeType":"MemberExpression","source":"      this.state.task.active = !this.state.task.active"},{"ruleId":"react/no-direct-mutation-state","severity":1,"message":"Do not mutate state directly. Use setState().","line":31,"column":7,"nodeType":"MemberExpression","source":"      this.state.task[field] = element.target.value"}],"errorCount":0,"warningCount":2,"source":"  import React  from 'react';\n//import axios from 'axios';\nimport { connect } from 'react-redux';\n\nimport { addTask  } from '../../actions/tasks';\n\n\nclass Task_Form extends React.Component {\n  //initial state форми\n  constructor() {\n    super();\n    this.state = {\n      task: {\n        title: '',\n        description: '',\n        priority: '',\n        due_date: '',\n        user_id: '',\n        active: false\n      }\n    };\n  }\n\n  //змінює стейт форми\n  handleChange(field, element) {\n    //змінює стейт active на протилежне\n    if (field === 'active')\n      this.state.task.active = !this.state.task.active\n    //змінює стейт решти полів форми\n    else\n      this.state.task[field] = element.target.value\n    //console.log(this.state.task)\n  }\n\n  //сабмітить форму\n  handleSubmit(element) {\n    element.preventDefault();\n    this.props.onAddTask(this.state.task);\n  }\n\n  render() {\n    return(\n      <form className='form-group' onSubmit={ this.handleSubmit.bind(this) } >\n\n        <label>Title:</label>\n        <input className='form-control' onChange={ this.handleChange.bind( this, 'title') } type=\"text\" placeholder='Enter a title' required minLength=\"5\" maxLength=\"30\" />\n\n        <label>Description:</label>\n        <input className='form-control' onChange={ this.handleChange.bind( this, 'description') } type=\"text\" placeholder='Enter a description' required />\n\n        <label>Priority:</label>\n        <input className='form-control' onChange={ this.handleChange.bind( this, 'priority') } type=\"number\" placeholder='Enter a priority' required max=\"9999\" />\n\n        <label>Date:</label>\n        <input className='form-control' onChange={ this.handleChange.bind( this, 'due_date') } type=\"date\" placeholder='Enter a date' required />\n\n        <label>Completed:</label>\n        <input className='form-group' onChange={ this.handleChange.bind( this, 'active') } type=\"checkbox\" />\n\n        <br/>\n\n        <button type=\"submit\" className=\"btn btn-primary form-group\">Add</button>\n\n      </form>\n    );\n  }\n}\n\nexport default connect(\n  state => ({}),\n  dispatch => ({\n    onAddTask: (task) => {\n      dispatch(addTask(task));\n    }\n  })\n)(Task_Form);"}],"errorCount":0,"warningCount":2}},"src/actions/tasks.js":{"hash":"85e9072deae62cb2c73ef1593b1c13cd","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/tasks.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/users.js":{"hash":"ccb92e5a003bbdfa66c35bb6244baacc","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/users.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'cookie' is defined but never used.","line":2,"column":8,"nodeType":"Identifier","source":"import cookie from 'react-cookie';"}],"errorCount":0,"warningCount":1,"source":"import axios from 'axios';\nimport cookie from 'react-cookie';\nimport { browserHistory } from 'react-router';\n\nconst API_URL = `http://localhost:3000/users`;\nconst headers = { 'Content-Type': 'application/json', }\n\n\nexport function addUser(user) {\n  return function(dispatch, getState) {\n    let body = JSON.stringify({user: user});\n\n    axios.post(API_URL, body, { headers: headers })\n      .then(res => {\n        dispatch({ type: 'RESOURCES/USERS/ADD', payload: res.data});\n        browserHistory.push('#/users/log_in');\n        location.reload()\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n}\n"}],"errorCount":0,"warningCount":1}}}