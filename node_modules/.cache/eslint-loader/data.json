{"src/index.js":{"hash":"2a92ecb4dec1e9fa7cad7415bf1033e3","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/index.js":{"hash":"15cb65968ab896b0a26c04474dc14f0b","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_index.js":{"hash":"7f194b8343232f217d14a745316bd813","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_index.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_edition.js":{"hash":"7856c09c26d21626eba76a9feaca896e","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_edition.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/task_profile.js":{"hash":"34d125547d7031fcf304e2ffb1a04fc2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/task_profile.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_out.js":{"hash":"d227c4ee82c226dd5e71ca393790e2d2","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_out.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_up.js":{"hash":"1684e52170741f0f76abf141f3514ede","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_up.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/log_in.js":{"hash":"cddf5d7e255ab83d3ea6bb6a7c602528","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/log_in.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/tasks.js":{"hash":"21648c6cc568e6bb53a61a7be0604d76","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/tasks.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/menu.js":{"hash":"9520b211796e8e197238ec4d6efed8ae","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/menu.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/tasks/tasks_list.js":{"hash":"8d65220c341226caddbe5bf84893d1f8","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/tasks_list.js","messages":[{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":35,"column":39,"nodeType":"ArrowFunctionExpression","source":"        {this.props.tasks.map( (task) => {"},{"ruleId":"array-callback-return","severity":1,"message":"Expected to return a value at the end of this function.","line":67,"column":39,"nodeType":"ArrowFunctionExpression","source":"        {this.props.tasks.map( (task) => {"}],"errorCount":0,"warningCount":2,"source":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\n\nimport {\n  getTasks,\n  deleteTask,\n  completeTask,\n} from '../../actions/tasks';\n\n\nclass TasksList extends Component {\n\n  static contextTypes = {\n    store: React.PropTypes.object\n  };\n\n  componentDidMount () {\n    this.context.store.dispatch(getTasks());\n  }\n\n  handleComplete (id, active) {\n    this.props.onCompleteTask(id, active);\n  }\n\n  handleDestroy (id) {\n    this.props.onDestroyTask(id);\n  }\n\n  render() {\n    return (\n      <div>\n\n        <h3> Current tasks: </h3>\n        {this.props.tasks.map( (task) => {\n          if (!task.active) {\n\n            return (\n              <div key={task.id}>\n              <br />\n                <li className=\"li_height hover1 for_icons\">\n\n                  <Link to={`/tasks/${task.id}/profile`} className='task_list' >\n                    <div className=\"col-xs-8\">{ task.title }</div>\n                  </Link>\n\n                  <div className=\"col-xs-1\">{ task.priority }</div>\n                  <div className=\"col-xs-3 hover2\" >\n\n                    <Link to={`/tasks/${task.id}/edit`} >\n                      <span className=\"glyphicon glyphicon-pencil\" title=\"Edit task\"></span>\n                    </Link>\n\n                    <span onClick={this.handleDestroy.bind(this, task.id)} className=\"glyphicon glyphicon-trash\" title=\"Delete task\"></span>\n\n                    <span onClick={this.handleComplete.bind(this, task.id, task.active)} className=\"glyphicon glyphicon-ok\" title=\"Mark as completed\"></span>\n\n                  </div>\n                </li>\n              </div>\n            );\n\n          }\n        })}\n\n        <h3> Completed tasks: </h3>\n        {this.props.tasks.map( (task) => {\n          if (task.active) {\n\n            return (\n              <div key={task.id}>\n              <br />\n                <li className=\"li_height hover1 for_icons\">\n\n                  <Link to={`/tasks/${task.id}/profile`} className='task_list' >\n                    <div className=\"col-xs-8\" style={{backgroundColor: ''}} >{ task.title }</div>\n                  </Link>\n\n                  <div className=\"col-xs-1\" style={{backgroundColor: ''}} >{ task.priority }</div>\n                  <div className=\"col-xs-3 hover2\" >\n\n                    <Link to={`/tasks/${task.id}/edit`} >\n                      <span className=\"glyphicon glyphicon-pencil\" title=\"Edit task\"></span>\n                    </Link>\n\n                    <span onClick={this.handleDestroy.bind(this, task.id)} className=\"glyphicon glyphicon-trash\" title=\"Delete task\"></span>\n\n                    <span onClick={this.handleComplete.bind(this, task.id, task.active)} className=\"glyphicon glyphicon-remove\" title=\"Mark as uncompleted\"></span>\n\n                  </div>\n                </li>\n              </div>\n            );\n\n          }\n        })}\n\n      </div>\n    );\n  }\n\n}\n\n\nexport default connect(\n  state => ({\n    tasks: state.tasks.items\n  }),\n  dispatch => ({\n    onDestroyTask: (id) => {\n      dispatch(deleteTask(id));\n    },\n    onCompleteTask: (id, active) => {\n      dispatch(completeTask(id, active));\n    },\n  })\n)(TasksList);"}],"errorCount":0,"warningCount":2}},"src/components/tasks/task_form.js":{"hash":"2445d7b491b09bceec903695027f3eae","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/tasks/task_form.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/tasks.js":{"hash":"3e9bcbd7db05773084382a764eb8e83c","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/tasks.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'ADD_NOTIFICATION' is defined but never used.","line":5,"column":72,"nodeType":"Identifier","source":"import { GET_TASKS, GET_TASK_ID, ADD_TASK, DELETE_TASK, COMPLETE_TASK, ADD_NOTIFICATION } from '../components/constants/action_types';"}],"errorCount":0,"warningCount":1,"source":"import axios from 'axios';\nimport { browserHistory } from 'react-router';\n\nimport { TASKS_URL, HEADERS, token } from '../components/constants/api_config';\nimport { GET_TASKS, GET_TASK_ID, ADD_TASK, DELETE_TASK, COMPLETE_TASK, ADD_NOTIFICATION } from '../components/constants/action_types';\nimport { addNotificationAsync } from './notifications';\n\n\n\nlet headers = Object.assign({}, HEADERS)\n  headers['Authorization'] = token\n\n\nexport function getTasks() {\n  return function(dispatch, getState) {\n    axios.get(TASKS_URL, { headers: headers })\n\n      .then(res => {\n        if (res.status === 200) {\n          dispatch({ type: GET_TASKS, payload: res.data });\n        }\n      })\n      .catch(e => {\n        console.error(\"error: \", e);\n      })\n  }\n}\n\nexport function getTask(id) {\n  return function(dispatch, getState) {\n    axios.get(`${TASKS_URL}/${id}`, { headers: headers })\n\n      .then(res => {\n        dispatch({ type: GET_TASK_ID, payload: res.data });\n      })\n      .catch(e => {\n        console.error(\"error: \", e);\n      })\n  }\n}\n\nexport function addTask(task) {\n  return function(dispatch, getState) {\n    axios.post(TASKS_URL, task, { headers: headers })\n\n      .then(res => {\n        dispatch({ type: ADD_TASK, payload: res.data });\n\n        addNotificationAsync({\n          message: 'Task has been successfully created'\n        })(dispatch);\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n}\n\nexport function deleteTask(id) {\n  return function(dispatch, getState) {\n    axios.delete(`${TASKS_URL}/${id}`, { headers: headers })\n\n      .then(res => {\n        dispatch({ type: DELETE_TASK, payload: id });\n\n        addNotificationAsync({\n          message: 'Task has been successfully deleted'\n        })(dispatch);\n      })\n      .catch(error => {\n        console.error(error);\n      })\n  }\n}\n\nexport function editTask(task) {\n  return function(dispatch, getState) {\n    axios.patch(`${TASKS_URL}/${task.id}`, task, { headers: headers })\n\n      .then(res => {\n        addNotificationAsync({\n          message: 'Task has been successfully updated'\n        })(dispatch);\n\n        setTimeout(() => {\n          browserHistory.push('/');\n          location.reload();\n        }, 2000)\n      })\n      .catch(e => {\n        console.error(\"Dispatching editTask: failed! \", e);\n      })\n  }\n}\n\nexport function completeTask(id, active) {\n  return function(dispatch, getState) {\n    if (active === true) {\n      active = false\n    } else {\n      active = true\n    }\n\n    let task = { id: id, active: active }\n    let body = { task: task }\n    axios.patch(`${TASKS_URL}/${task.id}`, body, { headers: headers })\n\n      .then(res => {\n        dispatch({ type: COMPLETE_TASK, payload: res.data });\n\n        addNotificationAsync({\n          message: 'Task has been successfully reassigned'\n        })(dispatch);\n      })\n      .catch(e => {\n        console.error(\"error: \", e);\n      })\n  }\n}"}],"errorCount":0,"warningCount":1}},"src/actions/users.js":{"hash":"4e1ebea1f582876b42d8e6326e8e027f","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/users.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/sign_in.js":{"hash":"e7cc8722cb8643c261e145e10e72ef32","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/sign_in.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/constants/action_types.js":{"hash":"fcc0e0795ce637f824403a1e4ebce645","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/constants/action_types.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/middlewares/redirections.js":{"hash":"d41d8cd98f00b204e9800998ecf8427e","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/middlewares/redirections.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/constants/action_config.js":{"hash":"0bc8107adc733e084c568f1351fa4ba4","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/constants/action_config.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/constants/api_config.js":{"hash":"3268da5b7203f142fc6b45678a1bfc28","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/constants/api_config.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/not_exists.js":{"hash":"00bf01c4cee551a69fcd7cb728cca032","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/not_exists.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/navbar.js":{"hash":"03c3de29ed9b33ead975a9ec9b3e090c","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/navbar.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/users/email_confirmation.js":{"hash":"bd9b0d39c6c31cc68d493a367aee6c2d","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/users/email_confirmation.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/alert.js":{"hash":"2742c136d7a1260a663ffacf7f6c6701","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/alert.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/reducers/alerts.js":{"hash":"abf277921b737f563276803953271ac5","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/alerts.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/components/layouts/notification.js":{"hash":"b13d4505240d7059be9df502433d4436","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/components/layouts/notification.js","messages":[{"ruleId":"no-unused-vars","severity":1,"message":"'elementNumber' is defined but never used.","line":12,"column":9,"nodeType":"Identifier","source":"    let elementNumber;"}],"errorCount":0,"warningCount":1,"source":"import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './notification.css';\n\n\nconst Notification = ({ notification }) => {\n\n  const { notificationsAsync } = notification\n\n  if (notificationsAsync.length > 0) {\n    let elementNumber;\n    return (\n      <div className='notifications-block container'>\n        <ul>\n          {\n            notificationsAsync.map( (key, index) => {\n              return <li key={ index } className='notification alert alert-success'>{ key.message }</li>\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n\n  return null;\n\n  // if (notification) {\n    //костиль з пропаданням алерту\n    // setTimeout(() => {\n    //   let Temp = document.getElementById(\"disappearing\")\n    //     if (Temp != null)\n    //       Temp.style.display = \"none\";\n    // }, 3000)\n\n  //   return (\n  //     <div id='disappearing'>\n  //       <div className='notifications-block'>\n  //         {notification.type}: {notification.text}\n  //       </div>\n  //     </div>\n  //   );\n  //  }\n\n  // return null;\n  // return <div className='notifications-block'>ELse</div>\n\n}\n\n//задається notification (зі стор)\nexport default connect(\n  state => ({\n    notification: state.notifications\n  })\n)(Notification);"}],"errorCount":0,"warningCount":1}},"src/reducers/notifications.js":{"hash":"1dfc17eeb94367a6297c001afa162f9e","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/reducers/notifications.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}},"src/actions/notifications.js":{"hash":"5e2f8331bace75dae560b709f2256ef1","res":{"results":[{"filePath":"/home/milestep/code/todo-react-client/src/actions/notifications.js","messages":[],"errorCount":0,"warningCount":0}],"errorCount":0,"warningCount":0}}}